

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Apr 15 16:18:49 2021

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     	FNCALL	_main,_LCD_init
   400                           	FNCALL	_main,_LCD_on
   401                           	FNCALL	_main,_LCD_printStr
   402                           	FNCALL	_main,_lCD_pos
   403                           	FNCALL	_LCD_printStr,_LCD_printChar
   404                           	FNROOT	_main
   405                           	global	_PORTDbits
   406                           _PORTDbits	set	0x8
   407  0008                     	global	_PORTB
   408                           _PORTB	set	0x6
   409  0006                     	global	_TRISB
   410                           _TRISB	set	0x86
   411  0086                     	global	_TRISDbits
   412                           _TRISDbits	set	0x88
   413  0088                     	global	_ANSELH
   414                           _ANSELH	set	0x189
   415  0189                     psect	strings,class=STRING,delta=2,noexec
   416                           global __pstrings
   417                           __pstrings:
   418  0003                     stringtab:
   419  0003                     	global    __stringtab
   420                           __stringtab:
   421  0003                     ;	String table - string pointers are 1 byte each
   422                           stringcode:stringdir:
   423  0003                     movlw high(stringdir)
      + 0003                     stringdir:	
   424  0003  3000               movwf pclath
   425  0004  008A               movf fsr,w
   426  0005  0804               incf fsr
   427  0006  0A84               	addwf pc
   428  0007  0782               	global __stringbase
   429                           __stringbase:
   430  0008                     	retlw	0
   431  0008  3400               psect	strings
   432                           	global    __end_of__stringtab
   433                           __end_of__stringtab:
   434  0009                     	
   435                           STR_1:	
   436  0009                     	retlw	32	;' '
   437  0009  3420               	retlw	62	;'>'
   438  000A  343E               	retlw	62	;'>'
   439  000B  343E               	retlw	32	;' '
   440  000C  3420               	retlw	32	;' '
   441  000D  3420               	retlw	83	;'S'
   442  000E  3453               	retlw	69	;'E'
   443  000F  3445               	retlw	78	;'N'
   444  0010  344E               	retlw	65	;'A'
   445  0011  3441               	retlw	73	;'I'
   446  0012  3449               	retlw	32	;' '
   447  0013  3420               	retlw	32	;' '
   448  0014  3420               	retlw	62	;'>'
   449  0015  343E               	retlw	62	;'>'
   450  0016  343E               	retlw	32	;' '
   451  0017  3420               	retlw	32	;' '
   452  0018  3420               	retlw	0
   453  0019  3400               psect	strings
   454                           ; #config settings
   455                           global __CFG_FOSC$INTRC_NOCLKOUT
   456                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   457  0000                     global __CFG_WDTE$OFF
   458                           __CFG_WDTE$OFF equ 0x0
   459  0000                     global __CFG_PWRTE$OFF
   460                           __CFG_PWRTE$OFF equ 0x0
   461  0000                     global __CFG_MCLRE$OFF
   462                           __CFG_MCLRE$OFF equ 0x0
   463  0000                     global __CFG_CP$OFF
   464                           __CFG_CP$OFF equ 0x0
   465  0000                     global __CFG_CPD$OFF
   466                           __CFG_CPD$OFF equ 0x0
   467  0000                     global __CFG_BOREN$OFF
   468                           __CFG_BOREN$OFF equ 0x0
   469  0000                     global __CFG_IESO$OFF
   470                           __CFG_IESO$OFF equ 0x0
   471  0000                     global __CFG_FCMEN$OFF
   472                           __CFG_FCMEN$OFF equ 0x0
   473  0000                     global __CFG_LVP$OFF
   474                           __CFG_LVP$OFF equ 0x0
   475  0000                     global __CFG_BOR4V$BOR40V
   476                           __CFG_BOR4V$BOR40V equ 0x0
   477  0000                     global __CFG_WRT$OFF
   478                           __CFG_WRT$OFF equ 0x0
   479  0000                     	file	"C:\Users\20185210\AppData\Local\Temp\sfok."
   480                           	line	#
   481                           psect cinit,class=CODE,delta=2
   482                           global start_initialization
   483                           start_initialization:
   484  07FC                     
   485                           global __initialization
   486                           __initialization:
   487  07FC                     psect cinit,class=CODE,delta=2,merge=1
   488                           global end_of_initialization,__end_of__initialization
   489                           
   490                           ;End of C runtime variable initialization code
   491                           
   492                           end_of_initialization:
   493  07FC                     __end_of__initialization:
   494  07FC                     clrf status
   495  07FC  0183               ljmp _main	;jump to C main() function
   496  07FD  120A  118A  2FAE   psect	cstackCOMMON,class=COMMON,space=1,noexec
   497                           global __pcstackCOMMON
   498                           __pcstackCOMMON:
   499  0070                     ?_LCD_init:	; 1 bytes @ 0x0
   500  0070                     ??_LCD_init:	; 1 bytes @ 0x0
   501  0070                     ?_LCD_on:	; 1 bytes @ 0x0
   502  0070                     ??_LCD_on:	; 1 bytes @ 0x0
   503  0070                     ?_LCD_printChar:	; 1 bytes @ 0x0
   504  0070                     ??_LCD_printChar:	; 1 bytes @ 0x0
   505  0070                     ?_lCD_pos:	; 1 bytes @ 0x0
   506  0070                     ??_lCD_pos:	; 1 bytes @ 0x0
   507  0070                     ?_LCD_printStr:	; 1 bytes @ 0x0
   508  0070                     ?_main:	; 1 bytes @ 0x0
   509  0070                     	ds	1
   510  0070                     	global	LCD_printChar@c
   511                           LCD_printChar@c:	; 1 bytes @ 0x1
   512  0071                     	global	lCD_pos@n
   513                           lCD_pos@n:	; 1 bytes @ 0x1
   514  0071                     	ds	1
   515  0071                     ??_LCD_printStr:	; 1 bytes @ 0x2
   516  0072                     	global	LCD_printStr@cont
   517                           LCD_printStr@cont:	; 2 bytes @ 0x2
   518  0072                     	ds	2
   519  0072                     	global	LCD_printStr@ptr
   520                           LCD_printStr@ptr:	; 1 bytes @ 0x4
   521  0074                     	ds	1
   522  0074                     ??_main:	; 1 bytes @ 0x5
   523  0075                     	ds	3
   524  0075                     	global	main@n
   525                           main@n:	; 2 bytes @ 0x8
   526  0078                     	ds	2
   527  0078                     ;!
   528                           ;!Data Sizes:
   529                           ;!    Strings     17
   530                           ;!    Constant    0
   531                           ;!    Data        0
   532                           ;!    BSS         0
   533                           ;!    Persistent  0
   534                           ;!    Stack       0
   535                           ;!
   536                           ;!Auto Spaces:
   537                           ;!    Space          Size  Autos    Used
   538                           ;!    COMMON           14     10      10
   539                           ;!    BANK0            80      0       0
   540                           ;!    BANK1            80      0       0
   541                           ;!    BANK3            96      0       0
   542                           ;!    BANK2            96      0       0
   543                           
   544                           ;!
   545                           ;!Pointer List with Targets:
   546                           ;!
   547                           ;!    LCD_printStr@ptr	PTR unsigned char  size(1) Largest target is 17
   548                           ;!		 -> STR_1(CODE[17]), 
   549                           ;!
   550                           
   551                           
   552                           ;!
   553                           ;!Critical Paths under _main in COMMON
   554                           ;!
   555                           ;!    _main->_LCD_printStr
   556                           ;!    _LCD_printStr->_LCD_printChar
   557                           ;!
   558                           ;!Critical Paths under _main in BANK0
   559                           ;!
   560                           ;!    None.
   561                           ;!
   562                           ;!Critical Paths under _main in BANK1
   563                           ;!
   564                           ;!    None.
   565                           ;!
   566                           ;!Critical Paths under _main in BANK3
   567                           ;!
   568                           ;!    None.
   569                           ;!
   570                           ;!Critical Paths under _main in BANK2
   571                           ;!
   572                           ;!    None.
   573                           
   574 ;;
   575 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   576 ;;
   577                           
   578                           ;!
   579                           ;!Call Graph Tables:
   580                           ;!
   581                           ;! ---------------------------------------------------------------------------------
   582                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   583                           ;! ---------------------------------------------------------------------------------
   584                           ;! (0) _main                                                 5     5      0     199
   585                           ;!                                              5 COMMON     5     5      0
   586                           ;!                           _LCD_init
   587                           ;!                             _LCD_on
   588                           ;!                       _LCD_printStr
   589                           ;!                            _lCD_pos
   590                           ;! ---------------------------------------------------------------------------------
   591                           ;! (1) _lCD_pos                                              2     2      0      15
   592                           ;!                                              0 COMMON     2     2      0
   593                           ;! ---------------------------------------------------------------------------------
   594                           ;! (1) _LCD_printStr                                         3     3      0     138
   595                           ;!                                              2 COMMON     3     3      0
   596                           ;!                      _LCD_printChar
   597                           ;! ---------------------------------------------------------------------------------
   598                           ;! (2) _LCD_printChar                                        2     2      0      15
   599                           ;!                                              0 COMMON     2     2      0
   600                           ;! ---------------------------------------------------------------------------------
   601                           ;! (1) _LCD_on                                               1     1      0       0
   602                           ;!                                              0 COMMON     1     1      0
   603                           ;! ---------------------------------------------------------------------------------
   604                           ;! (1) _LCD_init                                             0     0      0       0
   605                           ;! ---------------------------------------------------------------------------------
   606                           ;! Estimated maximum stack depth 2
   607                           ;! ---------------------------------------------------------------------------------
   608                           ;!
   609                           ;! Call Graph Graphs:
   610                           ;!
   611                           ;! _main (ROOT)
   612                           ;!   _LCD_init
   613                           ;!   _LCD_on
   614                           ;!   _LCD_printStr
   615                           ;!     _LCD_printChar
   616                           ;!   _lCD_pos
   617                           ;!
   618                           
   619                           ;! Address spaces:
   620                           
   621                           ;!Name               Size   Autos  Total    Cost      Usage
   622                           ;!BITCOMMON            E      0       0       0        0.0%
   623                           ;!EEDATA             100      0       0       0        0.0%
   624                           ;!NULL                 0      0       0       0        0.0%
   625                           ;!CODE                 0      0       0       0        0.0%
   626                           ;!COMMON               E      A       A       1       71.4%
   627                           ;!BITSFR0              0      0       0       1        0.0%
   628                           ;!SFR0                 0      0       0       1        0.0%
   629                           ;!BITSFR1              0      0       0       2        0.0%
   630                           ;!SFR1                 0      0       0       2        0.0%
   631                           ;!STACK                0      0       0       2        0.0%
   632                           ;!ABS                  0      0       0       3        0.0%
   633                           ;!BITBANK0            50      0       0       4        0.0%
   634                           ;!BITSFR3              0      0       0       4        0.0%
   635                           ;!SFR3                 0      0       0       4        0.0%
   636                           ;!BANK0               50      0       0       5        0.0%
   637                           ;!BITSFR2              0      0       0       5        0.0%
   638                           ;!SFR2                 0      0       0       5        0.0%
   639                           ;!BITBANK1            50      0       0       6        0.0%
   640                           ;!BANK1               50      0       0       7        0.0%
   641                           ;!BITBANK3            60      0       0       8        0.0%
   642                           ;!BANK3               60      0       0       9        0.0%
   643                           ;!BITBANK2            60      0       0      10        0.0%
   644                           ;!BANK2               60      0       0      11        0.0%
   645                           ;!DATA                 0      0       0      12        0.0%
   646                           
   647                           	global	_main
   648                           
   649 ;; *************** function _main *****************
   650 ;; Defined at:
   651 ;;		line 67 in file "main.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;		None
   654 ;; Auto vars:     Size  Location     Type
   655 ;;  n               2    8[COMMON] int 
   656 ;; Return value:  Size  Location     Type
   657 ;;                  1    wreg      void 
   658 ;; Registers used:
   659 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   660 ;; Tracked objects:
   661 ;;		On entry : B00/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   665 ;;      Params:         0       0       0       0       0
   666 ;;      Locals:         2       0       0       0       0
   667 ;;      Temps:          3       0       0       0       0
   668 ;;      Totals:         5       0       0       0       0
   669 ;;Total ram usage:        5 bytes
   670 ;; Hardware stack levels required when called:    2
   671 ;; This function calls:
   672 ;;		_LCD_init
   673 ;;		_LCD_on
   674 ;;		_LCD_printStr
   675 ;;		_lCD_pos
   676 ;; This function is called by:
   677 ;;		Startup code after reset
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   681                           	file	"main.c"
   682                           	line	67
   683                           global __pmaintext
   684                           __pmaintext:	;psect for function _main
   685  07AE                     psect	maintext
   686                           	file	"main.c"
   687                           	line	67
   688                           	global	__size_of_main
   689                           	__size_of_main	equ	__end_of_main-_main
   690  004E                     	
   691                           _main:	
   692  07AE                     ;incstack = 0
   693                           	opt	stack 6
   694                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   695                           	line	70
   696                           	
   697                           l683:	
   698  07AE                     ;main.c: 69:     int n;;main.c: 70:     LCD_init();
   699                           	fcall	_LCD_init
   700  07AE  120A  118A  2766  120A  118A  	line	71
   701                           	
   702                           l685:	
   703  07B3                     ;main.c: 71:     LCD_on();
   704                           	fcall	_LCD_on
   705  07B3  120A  118A  2748  120A  118A  	goto	l687
   706  07B8  2FB9               	line	72
   707                           ;main.c: 72:     while(1)
   708                           	
   709                           l35:	
   710  07B9                     	line	74
   711                           	
   712                           l687:	
   713  07B9                     ;main.c: 73:     {;main.c: 74:         for ( n = 0; n<128; n++ )
   714                           	clrf	(main@n)
   715  07B9  01F8               	clrf	(main@n+1)
   716  07BA  01F9               	
   717                           l689:	
   718  07BB                     	movf	(main@n+1),w
   719  07BB  0879               	xorlw	80h
   720  07BC  3A80               	movwf	btemp+1
   721  07BD  00FF               	movlw	(0)^80h
   722  07BE  3080               	subwf	btemp+1,w
   723  07BF  027F               	skipz
   724  07C0  1D03               	goto	u55
   725  07C1  2FC4               	movlw	080h
   726  07C2  3080               	subwf	(main@n),w
   727  07C3  0278               u55:
   728  07C4                     
   729                           	skipc
   730  07C4  1C03               	goto	u51
   731  07C5  2FC7               	goto	u50
   732  07C6  2FC8               u51:
   733  07C7                     	goto	l693
   734  07C7  2FCA               u50:
   735  07C8                     	goto	l687
   736  07C8  2FB9               	
   737                           l691:	
   738  07C9                     	goto	l687
   739  07C9  2FB9               	
   740                           l36:	
   741  07CA                     	line	76
   742                           	
   743                           l693:	
   744  07CA                     ;main.c: 75:         {;main.c: 76:             lCD_pos(14);
   745                           	movlw	low(0Eh)
   746  07CA  300E               	fcall	_lCD_pos
   747  07CB  120A  118A  2776  120A  118A  	line	77
   748                           	
   749                           l695:	
   750  07D0                     ;main.c: 77:             LCD_printStr(" >>  SENAI  >>  ");
   751                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
   752  07D0  3001               	fcall	_LCD_printStr
   753  07D1  120A  118A  2787  120A  118A  	line	78
   754                           	
   755                           l697:	
   756  07D6                     ;main.c: 78:             _delay((unsigned long)((250)*(4000000/4000.0)));
   757                           	opt asmopt_push
   758                           opt asmopt_off
   759                           movlw  2
   760  07D6  3002               movwf	((??_main+0)+0+2),f
   761  07D7  00F7               movlw	69
   762  07D8  3045               movwf	((??_main+0)+0+1),f
   763  07D9  00F6               	movlw	169
   764  07DA  30A9               movwf	((??_main+0)+0),f
   765  07DB  00F5               	u77:
   766  07DC                     decfsz	((??_main+0)+0),f
   767  07DC  0BF5               	goto	u77
   768  07DD  2FDC               	decfsz	((??_main+0)+0+1),f
   769  07DE  0BF6               	goto	u77
   770  07DF  2FDC               	decfsz	((??_main+0)+0+2),f
   771  07E0  0BF7               	goto	u77
   772  07E1  2FDC               	nop2
   773  07E2  2FE3               opt asmopt_pop
   774                           
   775                           	line	79
   776                           	
   777                           l699:	
   778  07E3                     ;main.c: 79:         }
   779                           	movlw	01h
   780  07E3  3001               	addwf	(main@n),f
   781  07E4  07F8               	skipnc
   782  07E5  1803               	incf	(main@n+1),f
   783  07E6  0AF9               	movlw	0
   784  07E7  3000               	addwf	(main@n+1),f
   785  07E8  07F9               	
   786                           l701:	
   787  07E9                     	movf	(main@n+1),w
   788  07E9  0879               	xorlw	80h
   789  07EA  3A80               	movwf	btemp+1
   790  07EB  00FF               	movlw	(0)^80h
   791  07EC  3080               	subwf	btemp+1,w
   792  07ED  027F               	skipz
   793  07EE  1D03               	goto	u65
   794  07EF  2FF2               	movlw	080h
   795  07F0  3080               	subwf	(main@n),w
   796  07F1  0278               u65:
   797  07F2                     
   798                           	skipc
   799  07F2  1C03               	goto	u61
   800  07F3  2FF5               	goto	u60
   801  07F4  2FF6               u61:
   802  07F5                     	goto	l693
   803  07F5  2FCA               u60:
   804  07F6                     	goto	l687
   805  07F6  2FB9               	
   806                           l37:	
   807  07F7                     	goto	l687
   808  07F7  2FB9               	line	80
   809                           ;main.c: 80:     }
   810                           	
   811                           l38:	
   812  07F8                     	goto	l687
   813  07F8  2FB9               	
   814                           l39:	
   815  07F9                     	line	81
   816                           	
   817                           l40:	
   818  07F9                     	global	start
   819                           	ljmp	start
   820  07F9  120A  118A  2800   	opt stack 0
   821                           GLOBAL	__end_of_main
   822                           	__end_of_main:
   823  07FC                     	signat	_main,89
   824                           	global	_lCD_pos
   825                           
   826 ;; *************** function _lCD_pos *****************
   827 ;; Defined at:
   828 ;;		line 48 in file "main.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;  n               1    wreg     unsigned char 
   831 ;; Auto vars:     Size  Location     Type
   832 ;;  n               1    1[COMMON] unsigned char 
   833 ;; Return value:  Size  Location     Type
   834 ;;                  1    wreg      void 
   835 ;; Registers used:
   836 ;;		wreg, status,2
   837 ;; Tracked objects:
   838 ;;		On entry : 0/0
   839 ;;		On exit  : 0/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   842 ;;      Params:         0       0       0       0       0
   843 ;;      Locals:         1       0       0       0       0
   844 ;;      Temps:          1       0       0       0       0
   845 ;;      Totals:         2       0       0       0       0
   846 ;;Total ram usage:        2 bytes
   847 ;; Hardware stack levels used:    1
   848 ;; This function calls:
   849 ;;		Nothing
   850 ;; This function is called by:
   851 ;;		_main
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
   855                           	line	48
   856                           global __ptext1
   857                           __ptext1:	;psect for function _lCD_pos
   858  0776                     psect	text1
   859                           	file	"main.c"
   860                           	line	48
   861                           	global	__size_of_lCD_pos
   862                           	__size_of_lCD_pos	equ	__end_of_lCD_pos-_lCD_pos
   863  0011                     	
   864                           _lCD_pos:	
   865  0776                     ;incstack = 0
   866                           	opt	stack 7
   867                           ; Regs used in _lCD_pos: [wreg+status,2]
   868                           ;lCD_pos@n stored from wreg
   869                           	movwf	(lCD_pos@n)
   870  0776  00F1               	line	50
   871                           	
   872                           l637:	
   873  0777                     ;main.c: 48: void lCD_pos ( char n );main.c: 49: {;main.c: 50:     PORTDbits.RD7 = 1;
   874                           	bcf	status, 5	;RP0=0, select bank0
   875  0777  1283               	bcf	status, 6	;RP1=0, select bank0
   876  0778  1303               	bsf	(8),7	;volatile
   877  0779  1788               	line	51
   878                           ;main.c: 51:     PORTDbits.RD6 = 0;
   879                           	bcf	(8),6	;volatile
   880  077A  1308               	line	52
   881                           	
   882                           l639:	
   883  077B                     ;main.c: 52:     PORTB = 0X80 | n;
   884                           	movf	(lCD_pos@n),w
   885  077B  0871               	iorlw	080h
   886  077C  3880               	movwf	(6)	;volatile
   887  077D  0086               	line	53
   888                           	
   889                           l641:	
   890  077E                     ;main.c: 53:     PORTDbits.RD7 = 0;
   891                           	bcf	(8),7	;volatile
   892  077E  1388               	line	54
   893                           	
   894                           l643:	
   895  077F                     ;main.c: 54:     _delay((unsigned long)((40)*(4000000/4000000.0)));
   896                           	opt asmopt_push
   897                           opt asmopt_off
   898                           	movlw	13
   899  077F  300D               movwf	((??_lCD_pos+0)+0),f
   900  0780  00F0               	u87:
   901  0781                     decfsz	(??_lCD_pos+0)+0,f
   902  0781  0BF0               	goto	u87
   903  0782  2F81               opt asmopt_pop
   904                           
   905                           	line	55
   906                           	
   907                           l645:	
   908  0783                     ;main.c: 55:     PORTDbits.RD7 = 1;
   909                           	bcf	status, 5	;RP0=0, select bank0
   910  0783  1283               	bcf	status, 6	;RP1=0, select bank0
   911  0784  1303               	bsf	(8),7	;volatile
   912  0785  1788               	line	56
   913                           	
   914                           l24:	
   915  0786                     	return
   916  0786  0008               	opt stack 0
   917                           GLOBAL	__end_of_lCD_pos
   918                           	__end_of_lCD_pos:
   919  0787                     	signat	_lCD_pos,4217
   920                           	global	_LCD_printStr
   921                           
   922 ;; *************** function _LCD_printStr *****************
   923 ;; Defined at:
   924 ;;		line 57 in file "main.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;  ptr             1    wreg     PTR unsigned char 
   927 ;;		 -> STR_1(17), 
   928 ;; Auto vars:     Size  Location     Type
   929 ;;  ptr             1    4[COMMON] PTR unsigned char 
   930 ;;		 -> STR_1(17), 
   931 ;;  cont            2    2[COMMON] int 
   932 ;; Return value:  Size  Location     Type
   933 ;;                  1    wreg      void 
   934 ;; Registers used:
   935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   941 ;;      Params:         0       0       0       0       0
   942 ;;      Locals:         3       0       0       0       0
   943 ;;      Temps:          0       0       0       0       0
   944 ;;      Totals:         3       0       0       0       0
   945 ;;Total ram usage:        3 bytes
   946 ;; Hardware stack levels used:    1
   947 ;; Hardware stack levels required when called:    1
   948 ;; This function calls:
   949 ;;		_LCD_printChar
   950 ;; This function is called by:
   951 ;;		_main
   952 ;; This function uses a non-reentrant model
   953 ;;
   954                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
   955                           	line	57
   956                           global __ptext2
   957                           __ptext2:	;psect for function _LCD_printStr
   958  0787                     psect	text2
   959                           	file	"main.c"
   960                           	line	57
   961                           	global	__size_of_LCD_printStr
   962                           	__size_of_LCD_printStr	equ	__end_of_LCD_printStr-_LCD_printStr
   963  0027                     	
   964                           _LCD_printStr:	
   965  0787                     ;incstack = 0
   966                           	opt	stack 6
   967                           ; Regs used in _LCD_printStr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   968                           ;LCD_printStr@ptr stored from wreg
   969                           	movwf	(LCD_printStr@ptr)
   970  0787  00F4               	line	59
   971                           	
   972                           l675:	
   973  0788                     ;main.c: 57: void LCD_printStr ( char * ptr );main.c: 58: {;main.c: 59:     int cont = 0
                                 ;
   974                           	clrf	(LCD_printStr@cont)
   975  0788  01F2               	clrf	(LCD_printStr@cont+1)
   976  0789  01F3               	line	61
   977                           ;main.c: 61:     while ( *(ptr + cont) )
   978                           	goto	l681
   979  078A  2F9F               	
   980                           l28:	
   981  078B                     	line	63
   982                           	
   983                           l677:	
   984  078B                     ;main.c: 62:     {;main.c: 63:         LCD_printChar(*(ptr + cont) );
   985                           	movf	(LCD_printStr@cont),w
   986  078B  0872               	addwf	(LCD_printStr@ptr),w
   987  078C  0774               	movwf	fsr0
   988  078D  0084               	fcall	stringdir
   989  078E  120A  118A  2003  120A  118A  	fcall	_LCD_printChar
   990  0793  120A  118A  2757  120A  118A  	line	64
   991                           	
   992                           l679:	
   993  0798                     ;main.c: 64:         cont++;
   994                           	movlw	01h
   995  0798  3001               	addwf	(LCD_printStr@cont),f
   996  0799  07F2               	skipnc
   997  079A  1803               	incf	(LCD_printStr@cont+1),f
   998  079B  0AF3               	movlw	0
   999  079C  3000               	addwf	(LCD_printStr@cont+1),f
  1000  079D  07F3               	goto	l681
  1001  079E  2F9F               	line	65
  1002                           ;main.c: 65:     }
  1003                           	
  1004                           l27:	
  1005  079F                     	line	61
  1006                           	
  1007                           l681:	
  1008  079F                     ;main.c: 61:     while ( *(ptr + cont) )
  1009                           	movf	(LCD_printStr@cont),w
  1010  079F  0872               	addwf	(LCD_printStr@ptr),w
  1011  07A0  0774               	movwf	fsr0
  1012  07A1  0084               	fcall	stringdir
  1013  07A2  120A  118A  2003  120A  118A  	xorlw	0
  1014  07A7  3A00               	skipz
  1015  07A8  1D03               	goto	u41
  1016  07A9  2FAB               	goto	u40
  1017  07AA  2FAC               u41:
  1018  07AB                     	goto	l677
  1019  07AB  2F8B               u40:
  1020  07AC                     	goto	l30
  1021  07AC  2FAD               	
  1022                           l29:	
  1023  07AD                     	line	66
  1024                           	
  1025                           l30:	
  1026  07AD                     	return
  1027  07AD  0008               	opt stack 0
  1028                           GLOBAL	__end_of_LCD_printStr
  1029                           	__end_of_LCD_printStr:
  1030  07AE                     	signat	_LCD_printStr,4217
  1031                           	global	_LCD_printChar
  1032                           
  1033 ;; *************** function _LCD_printChar *****************
  1034 ;; Defined at:
  1035 ;;		line 38 in file "main.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;  c               1    wreg     unsigned char 
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;  c               1    1[COMMON] unsigned char 
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  1    wreg      void 
  1042 ;; Registers used:
  1043 ;;		wreg
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1049 ;;      Params:         0       0       0       0       0
  1050 ;;      Locals:         1       0       0       0       0
  1051 ;;      Temps:          1       0       0       0       0
  1052 ;;      Totals:         2       0       0       0       0
  1053 ;;Total ram usage:        2 bytes
  1054 ;; Hardware stack levels used:    1
  1055 ;; This function calls:
  1056 ;;		Nothing
  1057 ;; This function is called by:
  1058 ;;		_LCD_printStr
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1062                           	line	38
  1063                           global __ptext3
  1064                           __ptext3:	;psect for function _LCD_printChar
  1065  0757                     psect	text3
  1066                           	file	"main.c"
  1067                           	line	38
  1068                           	global	__size_of_LCD_printChar
  1069                           	__size_of_LCD_printChar	equ	__end_of_LCD_printChar-_LCD_printChar
  1070  000F                     	
  1071                           _LCD_printChar:	
  1072  0757                     ;incstack = 0
  1073                           	opt	stack 6
  1074                           ; Regs used in _LCD_printChar: [wreg]
  1075                           ;LCD_printChar@c stored from wreg
  1076                           	movwf	(LCD_printChar@c)
  1077  0757  00F1               	line	41
  1078                           	
  1079                           l613:	
  1080  0758                     ;main.c: 38: void LCD_printChar( char c);main.c: 39: {;main.c: 41:     PORTDbits.RD6 = 1
                                 ;
  1081                           	bcf	status, 5	;RP0=0, select bank0
  1082  0758  1283               	bcf	status, 6	;RP1=0, select bank0
  1083  0759  1303               	bsf	(8),6	;volatile
  1084  075A  1708               	line	42
  1085                           	
  1086                           l615:	
  1087  075B                     ;main.c: 42:     PORTB = c;
  1088                           	movf	(LCD_printChar@c),w
  1089  075B  0871               	movwf	(6)	;volatile
  1090  075C  0086               	line	43
  1091                           	
  1092                           l617:	
  1093  075D                     ;main.c: 43:     PORTDbits.RD7 = 0;
  1094                           	bcf	(8),7	;volatile
  1095  075D  1388               	line	44
  1096                           ;main.c: 44:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1097                           	opt asmopt_push
  1098                           opt asmopt_off
  1099                           	movlw	13
  1100  075E  300D               movwf	((??_LCD_printChar+0)+0),f
  1101  075F  00F0               	u97:
  1102  0760                     decfsz	(??_LCD_printChar+0)+0,f
  1103  0760  0BF0               	goto	u97
  1104  0761  2F60               opt asmopt_pop
  1105                           
  1106                           	line	45
  1107                           	
  1108                           l619:	
  1109  0762                     ;main.c: 45:     PORTDbits.RD7 = 1;
  1110                           	bcf	status, 5	;RP0=0, select bank0
  1111  0762  1283               	bcf	status, 6	;RP1=0, select bank0
  1112  0763  1303               	bsf	(8),7	;volatile
  1113  0764  1788               	line	46
  1114                           	
  1115                           l21:	
  1116  0765                     	return
  1117  0765  0008               	opt stack 0
  1118                           GLOBAL	__end_of_LCD_printChar
  1119                           	__end_of_LCD_printChar:
  1120  0766                     	signat	_LCD_printChar,4217
  1121                           	global	_LCD_on
  1122                           
  1123 ;; *************** function _LCD_on *****************
  1124 ;; Defined at:
  1125 ;;		line 28 in file "main.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;		None
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;		None
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		wreg
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1139 ;;      Params:         0       0       0       0       0
  1140 ;;      Locals:         0       0       0       0       0
  1141 ;;      Temps:          1       0       0       0       0
  1142 ;;      Totals:         1       0       0       0       0
  1143 ;;Total ram usage:        1 bytes
  1144 ;; Hardware stack levels used:    1
  1145 ;; This function calls:
  1146 ;;		Nothing
  1147 ;; This function is called by:
  1148 ;;		_main
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1152                           	line	28
  1153                           global __ptext4
  1154                           __ptext4:	;psect for function _LCD_on
  1155  0748                     psect	text4
  1156                           	file	"main.c"
  1157                           	line	28
  1158                           	global	__size_of_LCD_on
  1159                           	__size_of_LCD_on	equ	__end_of_LCD_on-_LCD_on
  1160  000F                     	
  1161                           _LCD_on:	
  1162  0748                     ;incstack = 0
  1163                           	opt	stack 7
  1164                           ; Regs used in _LCD_on: [wreg]
  1165                           	line	31
  1166                           	
  1167                           l629:	
  1168  0748                     ;main.c: 31:     PORTDbits.RD7 = 1;
  1169                           	bcf	status, 5	;RP0=0, select bank0
  1170  0748  1283               	bcf	status, 6	;RP1=0, select bank0
  1171  0749  1303               	bsf	(8),7	;volatile
  1172  074A  1788               	line	32
  1173                           ;main.c: 32:     PORTDbits.RD6 = 0;
  1174                           	bcf	(8),6	;volatile
  1175  074B  1308               	line	33
  1176                           	
  1177                           l631:	
  1178  074C                     ;main.c: 33:     PORTB = 0X0F;
  1179                           	movlw	low(0Fh)
  1180  074C  300F               	movwf	(6)	;volatile
  1181  074D  0086               	line	34
  1182                           	
  1183                           l633:	
  1184  074E                     ;main.c: 34:     PORTDbits.RD7 = 0;
  1185                           	bcf	(8),7	;volatile
  1186  074E  1388               	line	35
  1187                           ;main.c: 35:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1188                           	opt asmopt_push
  1189                           opt asmopt_off
  1190                           	movlw	13
  1191  074F  300D               movwf	((??_LCD_on+0)+0),f
  1192  0750  00F0               	u107:
  1193  0751                     decfsz	(??_LCD_on+0)+0,f
  1194  0751  0BF0               	goto	u107
  1195  0752  2F51               opt asmopt_pop
  1196                           
  1197                           	line	36
  1198                           	
  1199                           l635:	
  1200  0753                     ;main.c: 36:     PORTDbits.RD7 = 1;
  1201                           	bcf	status, 5	;RP0=0, select bank0
  1202  0753  1283               	bcf	status, 6	;RP1=0, select bank0
  1203  0754  1303               	bsf	(8),7	;volatile
  1204  0755  1788               	line	37
  1205                           	
  1206                           l18:	
  1207  0756                     	return
  1208  0756  0008               	opt stack 0
  1209                           GLOBAL	__end_of_LCD_on
  1210                           	__end_of_LCD_on:
  1211  0757                     	signat	_LCD_on,89
  1212                           	global	_LCD_init
  1213                           
  1214 ;; *************** function _LCD_init *****************
  1215 ;; Defined at:
  1216 ;;		line 18 in file "main.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;		None
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;		None
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      void 
  1223 ;; Registers used:
  1224 ;;		status,2
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1230 ;;      Params:         0       0       0       0       0
  1231 ;;      Locals:         0       0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0
  1233 ;;      Totals:         0       0       0       0       0
  1234 ;;Total ram usage:        0 bytes
  1235 ;; Hardware stack levels used:    1
  1236 ;; This function calls:
  1237 ;;		Nothing
  1238 ;; This function is called by:
  1239 ;;		_main
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  1243                           	line	18
  1244                           global __ptext5
  1245                           __ptext5:	;psect for function _LCD_init
  1246  0766                     psect	text5
  1247                           	file	"main.c"
  1248                           	line	18
  1249                           	global	__size_of_LCD_init
  1250                           	__size_of_LCD_init	equ	__end_of_LCD_init-_LCD_init
  1251  0010                     	
  1252                           _LCD_init:	
  1253  0766                     ;incstack = 0
  1254                           	opt	stack 7
  1255                           ; Regs used in _LCD_init: [status,2]
  1256                           	line	20
  1257                           	
  1258                           l621:	
  1259  0766                     ;main.c: 20:     TRISDbits.TRISD6 = 0;
  1260                           	bsf	status, 5	;RP0=1, select bank1
  1261  0766  1683               	bcf	status, 6	;RP1=0, select bank1
  1262  0767  1303               	bcf	(136)^080h,6	;volatile
  1263  0768  1308               	line	21
  1264                           ;main.c: 21:     TRISDbits.TRISD7 = 0;
  1265                           	bcf	(136)^080h,7	;volatile
  1266  0769  1388               	line	22
  1267                           	
  1268                           l623:	
  1269  076A                     ;main.c: 22:     ANSELH = 0;
  1270                           	bsf	status, 5	;RP0=1, select bank3
  1271  076A  1683               	bsf	status, 6	;RP1=1, select bank3
  1272  076B  1703               	clrf	(393)^0180h	;volatile
  1273  076C  0189               	line	23
  1274                           ;main.c: 23:     TRISB = 0;
  1275                           	bsf	status, 5	;RP0=1, select bank1
  1276  076D  1683               	bcf	status, 6	;RP1=0, select bank1
  1277  076E  1303               	clrf	(134)^080h	;volatile
  1278  076F  0186               	line	24
  1279                           ;main.c: 24:     PORTB = 0;
  1280                           	bcf	status, 5	;RP0=0, select bank0
  1281  0770  1283               	bcf	status, 6	;RP1=0, select bank0
  1282  0771  1303               	clrf	(6)	;volatile
  1283  0772  0186               	line	25
  1284                           	
  1285                           l625:	
  1286  0773                     ;main.c: 25:     PORTDbits.RD7 = 1;
  1287                           	bsf	(8),7	;volatile
  1288  0773  1788               	line	26
  1289                           	
  1290                           l627:	
  1291  0774                     ;main.c: 26:     PORTDbits.RD6 = 0;
  1292                           	bcf	(8),6	;volatile
  1293  0774  1308               	line	27
  1294                           	
  1295                           l15:	
  1296  0775                     	return
  1297  0775  0008               	opt stack 0
  1298                           GLOBAL	__end_of_LCD_init
  1299                           	__end_of_LCD_init:
  1300  0776                     	signat	_LCD_init,89
  1301                           global	___latbits
  1302                           ___latbits	equ	2
  1303  0002                     	global	btemp
  1304                           	btemp set 07Eh
  1305  007E                     
  1306                           	DABS	1,126,2	;btemp
  1307                           	global	wtemp0
  1308                           	wtemp0 set btemp+0
  1309  007E                     	end


Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_printStr@ptr	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_LCD_printStr
    _LCD_printStr->_LCD_printChar

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     199
                                              5 COMMON     5     5      0
                           _LCD_init
                             _LCD_on
                       _LCD_printStr
                            _lCD_pos
 ---------------------------------------------------------------------------------
 (1) _lCD_pos                                              2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_printStr                                         3     3      0     138
                                              2 COMMON     3     3      0
                      _LCD_printChar
 ---------------------------------------------------------------------------------
 (2) _LCD_printChar                                        2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_on                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init
   _LCD_on
   _LCD_printStr
     _LCD_printChar
   _lCD_pos

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Apr 15 16:18:49 2021

                       pc 0002               __CFG_CP$OFF 0000                        l21 0765  
                      l30 07AD                        l15 0775                        l24 0786  
                      l40 07F9                        l18 0756                        l27 079F  
                      l35 07B9                        l28 078B                        l36 07CA  
                      l29 07AD                        l37 07F7                        l38 07F8  
                      l39 07F9                        u40 07AC                        u41 07AB  
                      u50 07C8                        u51 07C7                        u60 07F6  
                      u61 07F5                        u55 07C4                        u65 07F2  
                      u77 07DC                        u87 0781                        u97 0760  
                      fsr 0004                       l621 0766                       l613 0758  
                     l701 07E9                       l623 076A                       l631 074C  
                     l615 075B                       l625 0773                       l633 074E  
                     l617 075D                       l641 077E                       l627 0774  
                     l635 0753                       l619 0762                       l643 077F  
                     l629 0748                       l645 0783                       l637 0777  
                     l639 077B                       l681 079F                       l675 0788  
                     l691 07C9                       l683 07AE                       l677 078B  
                     l693 07CA                       l685 07B3                       l679 0798  
                     l695 07D0                       l687 07B9                       l697 07D6  
                     l689 07BB                       l699 07E3                       u107 0751  
            __CFG_CPD$OFF 0000                       fsr0 0004              __CFG_LVP$OFF 0000  
                    STR_1 0009              __CFG_WRT$OFF 0000                      _main 07AE  
                    btemp 007E                      start 0000             __CFG_IESO$OFF 0000  
  __size_of_LCD_printChar 000F           __end_of_lCD_pos 0787          __end_of_LCD_init 0776  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _PORTB 0006  
                   _TRISB 0086            __CFG_FCMEN$OFF 0000                     main@n 0078  
          __CFG_BOREN$OFF 0000                     pclath 000A             ?_LCD_printStr 0070  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 07FC              __end_of_main 07FC                    ??_main 0075  
           _LCD_printChar 0757                    _ANSELH 0189                    _LCD_on 0748  
          ??_LCD_printStr 0072            __CFG_PWRTE$OFF 0000                 ??_lCD_pos 0070  
          LCD_printChar@c 0071            ?_LCD_printChar 0070   __end_of__initialization 07FC  
               ?_LCD_init 0070            __pcstackCOMMON 0070                   ?_LCD_on 0070  
              ??_LCD_init 0070                __pmaintext 07AE      __end_of_LCD_printStr 07AE  
         ??_LCD_printChar 0070                __stringtab 0003           __size_of_LCD_on 000F  
                 _lCD_pos 0776                   __ptext1 0776                   __ptext2 0787  
                 __ptext3 0757                   __ptext4 0748                   __ptext5 0766  
    end_of_initialization 07FC           LCD_printStr@ptr 0074                 _PORTDbits 0008  
               _TRISDbits 0088            __end_of_LCD_on 0757         __size_of_LCD_init 0010  
   __size_of_LCD_printStr 0027       start_initialization 07FC                  ??_LCD_on 0070  
            _LCD_printStr 0787  __CFG_FOSC$INTRC_NOCLKOUT 0000                 ___latbits 0002  
                ?_lCD_pos 0070                 __pstrings 0003     __end_of_LCD_printChar 0766  
                _LCD_init 0766               __stringbase 0008                  lCD_pos@n 0071  
        __size_of_lCD_pos 0011        __end_of__stringtab 0009         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 004E                 stringcode 0003          LCD_printStr@cont 0072  
                stringdir 0003                  stringtab 0003  
